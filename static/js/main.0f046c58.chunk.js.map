{"version":3,"sources":["configs/general.js","modules/PostBlock/index.jsx","modules/Search/index.jsx","modules/MdRender/preview.jsx","App.js","reportWebVitals.js","modules/Loading/index.jsx","modules/CornerMenu/index.jsx","modules/Footer/index.jsx","modules/MdRender/index.jsx","index.js"],"names":["GITHUB_USER","OWNER","GIST_LIST_URL","concat","BLOG_NAME","TITLE_FILTER_RULE","DESC_FILTER_RULE","HOME_PAGE","GITHUB","PostBlock","props","post","title","Object","keys","files","created_at","html_url","description","gistId","id","isIpynb","match","ownerName","owner","login","react_default","a","createElement","key","className","href","target","rel","replace","src","alt","srcSet","moment","format","children","Search","_useState","useState","_useState2","slicedToArray","keyword","setKeyword","placeholder","type","value","onChange","e","onClick","preventDefault","window","open","encodeURI","axios","require","MdRender","_ref","_ref$maxLine","maxLine","content","setContent","useEffect","get","then","res","console","log","data","gistData","gistTitle","gistContent","split","slice","join","react_markdown","components","code","_ref2","node","inline","objectWithoutProperties","exec","prism","assign","String","style","codeSyntaxStyle","language","PreTag","App","posts","setPosts","setLoading","useContext","RootContext","titleRule","descRule","filter","catch","err","modules_Search","map","i","modules_PostBlock","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","isLoading","index","index_esm","height","width","Footer","Date","getFullYear","document","React","createContext","urlSearchParams","URLSearchParams","location","search","params","fromEntries","entries","render","undefined","Index","Provider","modules_Loading","src_App","modules_CornerMenu","modules_Footer","MdRender_MdRender","rootElement","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.0f046c58.chunk.js","sourcesContent":["export const GITHUB_USER = 'p208p2002'\nexport const OWNER = 'Philip Huang'\nexport const GIST_LIST_URL = `https://api.github.com/users/${GITHUB_USER}/gists`\nexport const BLOG_NAME = 'Philip\\'s blog'\n\nexport const TITLE_FILTER_RULE = /md$|ipynb$/; \nexport const DESC_FILTER_RULE = /#blog/;\n\nexport const HOME_PAGE = '/'\nexport const GITHUB = 'https://github.com/p208p2002'","import React from 'react'\nimport './index.css'\nimport { DESC_FILTER_RULE } from '../../configs/general'\nimport moment from 'moment'\n\nfunction PostBlock(props) {\n    let { post } = props\n    let title = Object.keys(post.files)[0] // only use first file\n    let { created_at, html_url, description } = post\n    let { id: gistId } = post\n\n\n    let isIpynb = title.match(/.*\\.ipynb/) === null ? false : true\n    let ownerName = post.owner.login\n    return (\n        <div key={title} id=\"Post-Block\">\n            <div className=\"text-center\">\n                <div>\n                    {isIpynb ? <a className='post-title' href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a> : <a className='post-title' href={`/?render=${gistId}`}>{title}</a>}\n\n\n                    {/*  */}\n                    {/* if the file type is ipynb, show a badge with \"open in colab\" */}\n                    {isIpynb ?\n                        <a\n                            className='post-title'\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href={`http://colab.research.google.com/gist/${ownerName}/` + html_url.replace(\"https://gist.github.com/\", \"\")}>\n                            <img className=\"title-badge\" src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"open in colab\" srcSet=\"\" />\n                        </a>\n                        :\n                        null\n                    }\n                </div>\n\n                <div>\n                    <small>\n                        {description.replace(DESC_FILTER_RULE, \"\")}\n                        <br />\n                        <span>{moment(created_at).format(\"LL\")}</span>\n                        <br />\n                    </small>\n                </div>\n            </div>\n\n            <hr />\n            {props.children}\n        </div>\n    )\n}\n\nexport default PostBlock","import React from 'react'\nimport './index.css'\nimport { GITHUB_USER } from '../../configs/general'\nimport { useState } from 'react'\n\nfunction Search() {\n    let [keyword, setKeyword] = useState('')\n    return (\n        <div id=\"Search-Bar\">\n            <form id=\"Searrch-Form\">\n                <input\n                    placeholder=\"Seacrh on Gist\"\n                    type=\"text\"\n                    value={keyword}\n                    onChange={(e) => {\n                        setKeyword(e.target.value)\n                    }}\n                />\n                <button\n                    type=\"submit\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        window.open(\"https://gist.github.com/search?q=\" + encodeURI(`user:${GITHUB_USER} ${keyword}`));\n                        setKeyword('')\n                    }}\n                >\n                    <i className=\"fa fa-search\"></i>\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default Search","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { tomorrow as codeSyntaxStyle } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport './preview.css'\nconst axios = require('axios');\n\nexport default function MdRender({ gistId, maxLine=20 }) {\n    const [content, setContent] = useState(\"\")\n    useEffect(() => {\n        axios.get(`https://api.github.com/gists/${gistId}`)\n            .then((res) => {\n                console.log(res.data)\n                const gistData = res.data\n                const gistTitle = Object.keys(gistData.files)[0]\n                const gistContent = gistData.files[gistTitle].content.split(\"\\n\").slice(0,maxLine).join(\"\\n\")\n\n                setContent(gistContent)\n            })\n    }, [])\n    return (\n        <div className=\"md-preview\">\n            <ReactMarkdown\n            children={content}\n            components={{\n                code({ node, inline, className, children, ...props }) {\n                    const match = /language-(\\w+)/.exec(className || '')\n                    return !inline && match ? (\n                        <SyntaxHighlighter\n                            children={String(children).replace(/\\n$/, '')}\n                            style={codeSyntaxStyle}\n                            language={match[1]}\n                            PreTag=\"div\"\n                            {...props}\n                        />\n                    ) : (\n                        <code className={className} {...props}>\n                            {children}\n                        </code>\n                    )\n                }\n            }}\n        />\n        </div>\n    )\n}","import React from 'react'\nimport { useState, useEffect, useContext } from 'react'\nimport './App.css';\nimport { GIST_LIST_URL, TITLE_FILTER_RULE, DESC_FILTER_RULE, BLOG_NAME } from './configs/general'\nimport PostBlock from './modules/PostBlock'\nimport Search from './modules/Search'\nimport { RootContext } from './index'\nimport MDPreviewer from './modules/MdRender/preview'\n\n\nconst axios = require('axios');\n\nfunction App() {\n\n  let [posts, setPosts] = useState([])\n  let { setLoading } = useContext(RootContext)\n\n  let fetchPost = (titleRule, descRule) => {\n    setLoading(true)\n    axios.get(GIST_LIST_URL)\n      .then((res) => {\n        console.log(res.data)\n        posts = res.data\n        posts = posts.filter((post) => {\n          let title = Object.keys(post.files)[0] // only use first file\n          let { description } = post\n          // console.log(description)\n          if (title.match(titleRule) && description.match(descRule)) {\n            return true\n          }\n          return false\n        })\n        setPosts(posts)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n      .then(() => {\n        setLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    fetchPost(TITLE_FILTER_RULE, DESC_FILTER_RULE)\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div id=\"App\">\n      <div className=\"text-center\">\n        <h1>{BLOG_NAME}</h1>\n        <Search />\n      </div>\n      <div className=\"context\">\n        {posts.map((post, i) => (\n          <PostBlock key={i} post={post} >\n            <MDPreviewer gistId={post.id} maxLine={15}/>\n          </PostBlock>\n\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport { useContext } from 'react'\nimport { RootContext } from '../../index'\nimport './index.css'\n\nfunction Loading(){\n    let { isLoading } = useContext(RootContext)\n    if(isLoading){\n        return(\n            <div id=\"Loading\">\n                Loading...\n            </div>\n        )\n    }\n    return null\n}\n\nexport default Loading","import React from 'react'\nimport './index.css'\nimport { FaGithub,FaHome } from \"react-icons/fa\";\nimport { HOME_PAGE,GITHUB } from '../../configs/general'\n\nfunction index() {\n    return (\n        <div id=\"Corner-Menu\">\n            <div className=\"link\">\n                <a href={GITHUB} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FaGithub className=\"animate__animated animate__backInUp\" style={{ height: '100%', width: '100%' }} />\n                </a>\n            </div>\n            <div className=\"link\">\n                <a href={HOME_PAGE}>\n                    <FaHome className=\"animate__animated animate__backInUp\" style={{ height: '100%', width: '100%' }} />\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default index","import React from 'react'\nimport { OWNER } from '../../configs/general'\nimport './index.css'\n\nfunction Footer() {\n    return (\n        <footer id=\"Footer\">\n            <br/>\n            {new Date().getFullYear()} © {OWNER}\n            <br/>\n            <small>Powered by <a href=\"https://github.com/p208p2002/blog\" target=\"_blank\" rel=\"noopener noreferrer\">Scooter</a></small>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { tomorrow as codeSyntaxStyle } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { BLOG_NAME } from '../../configs/general'\nconst axios = require('axios');\n\nexport default function MdRender({ gistId }) {\n    const [content, setContent] = useState(\"\")\n    useEffect(() => {\n        axios.get(`https://api.github.com/gists/${gistId}`)\n            .then((res) => {\n                console.log(res.data)\n                const gistData = res.data\n                const gistTitle = Object.keys(gistData.files)[0]\n                const gistContent = gistData.files[gistTitle].content\n                setContent(gistContent)\n                document.title = `${BLOG_NAME} - ${gistTitle}`\n            })\n    }, [])\n    return (\n        <ReactMarkdown\n            children={content}\n            components={{\n                code({ node, inline, className, children, ...props }) {\n                    const match = /language-(\\w+)/.exec(className || '')\n                    return !inline && match ? (\n                        <SyntaxHighlighter\n                            children={String(children).replace(/\\n$/, '')}\n                            style={codeSyntaxStyle}\n                            language={match[1]}\n                            PreTag=\"div\"\n                            {...props}\n                        />\n                    ) : (\n                        <code className={className} {...props}>\n                            {children}\n                        </code>\n                    )\n                }\n            }}\n        />\n    )\n}","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport LoadingView from './modules/Loading'\nimport CornerMenu from './modules/CornerMenu'\nimport Footer from './modules/Footer'\nimport { BLOG_NAME } from './configs/general'\nimport MdRender from './modules/MdRender';\nexport const RootContext = React.createContext({});\n\nconst urlSearchParams = new URLSearchParams(window.location.search);\nconst params = Object.fromEntries(urlSearchParams.entries());\nlet { render = undefined } = params\nconsole.log(params)\n\nfunction Index() {\n  let [isLoading, setLoading] = useState(false)\n\n  useEffect(() => {\n    document.title = BLOG_NAME\n  }, []);\n\n  return (\n    <RootContext.Provider value={{ isLoading, setLoading }}>\n      <LoadingView />\n      <div className=\"container\">\n        {render === undefined ? (\n          <div className=\"app-container\">\n            <App />\n            <CornerMenu />\n            <Footer />\n          </div>\n        ) : (\n          <div className=\"render-container\">\n            <MdRender gistId={render} />\n            <CornerMenu />\n            <Footer />\n\n          </div>\n        )}\n\n      </div>\n    </RootContext.Provider >\n  )\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Index />, rootElement);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}