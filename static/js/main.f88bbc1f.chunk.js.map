{"version":3,"sources":["configs/general.js","modules/PostBlock/index.jsx","modules/Search/index.jsx","modules/MdRender/preview.jsx","App.js","reportWebVitals.js","modules/Loading/index.jsx","modules/CornerMenu/index.jsx","modules/Footer/index.jsx","modules/MdRender/index.jsx","index.js"],"names":["OWNER","BLOG_NAME","HOME_PAGE","GITHUB","concat","IMG_FILE_PREFIX","POST_PRE_PAGE","PostBlock","_ref","doc","children","title","created_at","date","tags","react_default","a","createElement","key","id","className","href","page_link","join","Search","_useState","useState","_useState2","Object","slicedToArray","keyword","setKeyword","placeholder","type","value","onChange","e","target","onClick","preventDefault","window","open","axios","require","MdRender","file_link","_ref$maxLine","maxLine","content","setContent","useEffect","get","then","res","gistContent","data","split","slice","react_markdown","components","code","_ref2","node","inline","props","objectWithoutProperties","match","exec","prism","assign","String","replace","style","codeSyntaxStyle","language","PreTag","App","posts","setPosts","_useContext","useContext","RootContext","setLoading","params","_params$offset","offset","_params$limit","limit","parseInt","catch","err","console","log","modules_Search","map","post","i","modules_PostBlock","textAlign","marginLeft","marginRight","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","isLoading","index","rel","index_esm","height","width","Footer","Date","getFullYear","doc_id","_useState3","_useState4","pageTitle","setPageTitle","_useState5","_useState6","pageDescription","setPageDescription","gistTitle","fixImgLink","replaceAll","Fragment","Helmet","charSet","name","React","createContext","urlSearchParams","URLSearchParams","location","search","fromEntries","entries","page","undefined","Index","Provider","modules_Loading","src_App","modules_CornerMenu","modules_Footer","MdRender_MdRender","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+MACaA,eAAQ,gBACRC,EAAY,gBACZC,EAAY,IACZC,EAAM,sBAAAC,OAJQ,aAKdC,EAAe,6CAAAD,OALD,YAKC,0BACfE,EAAgB,QC2CdC,MA9Cf,SAAAC,GAAmC,IAAfC,EAAeD,EAAfC,IAAIC,EAAWF,EAAXE,SAEhBC,EAAQF,EAAIE,MACZC,EAAaH,EAAII,KACjBC,EAAOL,EAAIK,KAIf,OACIC,EAAAC,EAAAC,cAAA,OAAKC,IAAKP,EAAOQ,GAAG,cAEhBJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAaC,KAAMZ,EAAIa,WAAYX,IAiBhDI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,aACKH,EAAKS,KAAK,KACXR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAOL,GACPG,EAAAC,EAAAC,cAAA,cAKZF,EAAAC,EAAAC,cAAA,WACCP,UCZEc,MA5Bf,WAAkB,IAAAC,EACcC,mBAAS,IADvBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACAI,EADAJ,EAAA,GAEd,OACIZ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,cACJJ,EAAAC,EAAAC,cAAA,QAAME,GAAG,gBACLJ,EAAAC,EAAAC,cAAA,SACIe,YAAY,cACZC,KAAK,OACLC,MAAOJ,EACPK,SAAU,SAACC,GACPL,EAAWK,EAAEC,OAAOH,UAG5BnB,EAAAC,EAAAC,cAAA,UACIgB,KAAK,SACLK,QAAS,SAACF,GACNA,EAAEG,iBACFC,OAAOC,KAAK,eACZV,EAAW,MAGfhB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,wDCpB3BsB,SAAQC,EAAQ,KAEP,SAASC,EAATpC,GAA6C,IAAzBqC,EAAyBrC,EAAzBqC,UAAyBC,EAAAtC,EAAduC,eAAc,IAAAD,EAAN,GAAMA,EAAArB,EAC1BC,mBAAS,IADiBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjDuB,EADiDrB,EAAA,GACxCsB,EADwCtB,EAAA,GAUxD,OARAuB,oBAAU,WACNR,EAAMS,IAAIN,GACLO,KAAK,SAACC,GACH,IAAMC,EAAcD,EAAIE,KAAKC,MAAM,MAAMC,MAAM,EAAEV,GAASxB,KAAK,MAE/D0B,EAAWK,MAEpB,IAECvC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACAhD,SAAUsC,EACVW,WAAY,CACRC,KADQ,SAAAC,GAC8CA,EAA/CC,KAA+C,IAAzCC,EAAyCF,EAAzCE,OAAQ3C,EAAiCyC,EAAjCzC,UAAWV,EAAsBmD,EAAtBnD,SAAasD,EAASpC,OAAAqC,EAAA,EAAArC,CAAAiC,EAAA,0CAC5CK,EAAQ,iBAAiBC,KAAK/C,GAAa,IACjD,OAAQ2C,GAAUG,EACdnD,EAAAC,EAAAC,cAACmD,EAAA,EAADxC,OAAAyC,OAAA,CACI3D,SAAU4D,OAAO5D,GAAU6D,QAAQ,MAAO,IAC1CC,MAAOC,IACPC,SAAUR,EAAM,GAChBS,OAAO,OACHX,IAGRjD,EAAAC,EAAAC,cAAA,OAAAW,OAAAyC,OAAA,CAAMjD,UAAWA,GAAe4C,GAC3BtD,QCxB7B,IAAMgC,EAAQC,EAAQ,IAuDPiC,MArDf,WAAe,IAAAnD,EAEWC,mBAAS,IAFpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAERoD,EAFQlD,EAAA,GAEDmD,EAFCnD,EAAA,GAAAoD,EAGeC,qBAAWC,GAAjCC,EAHOH,EAGPG,WAAWC,EAHJJ,EAGII,OAHJC,EAI8BD,EAArCE,cAJO,IAAAD,EAIE,EAJFA,EAAAE,EAI8BH,EAAzBI,aAJL,IAAAD,EAIahF,EAJbgF,EA6Bb,OAvBAD,EAASG,SAASH,GAClBE,EAAQC,SAASD,GAkBjBrC,oBAAU,WAfRgC,GAAW,GACXxC,EAAMS,IAAI,eACPC,KAAK,SAACC,GAELwB,GADAA,EAAQxB,EAAIE,MACEE,MAAM4B,EAAOE,GAC3BT,EAASD,KAEVY,MAAM,SAACC,GACNC,QAAQC,IAAIF,KAEbtC,KAAK,WACJ8B,GAAW,MAMd,IAGDnE,EAAAC,EAAAC,cAAA,OAAKE,GAAG,OACNJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,UAAKhB,GACLc,EAAAC,EAAAC,cAAC4E,EAAD,OAGF9E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACZyD,EAAMiB,IAAI,SAACC,EAAMC,GAAP,OACTjF,EAAAC,EAAAC,cAACgF,EAAD,CAAW/E,IAAK8E,EAAGvF,IAAKsF,GACtBhF,EAAAC,EAAAC,cAAC2B,EAAD,CAAaC,UAAWkD,EAAKlD,UAAYE,QAAS,SAKxDhC,EAAAC,EAAAC,cAAA,OAAKuD,MAAO,CAAC0B,UAAU,WACvBnF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,KAAR,gBACAN,EAAAC,EAAAC,cAAA,QAAMuD,MAAO,CAAC2B,WAAW,EAAEC,YAAY,IAAvC,OACArF,EAAAC,EAAAC,cAAA,KAAGI,KAAI,YAAAjB,OAAciF,EAAO/E,EAArB,WAAAF,OAA4CiF,EAAqB,EAAd/E,IAAoB,oBC/CrE+F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAApE,EAAA,GAAAgB,KAAAoD,EAAAC,KAAA,WAAqBrD,KAAK,SAAA5C,GAAiD,IAA9CkG,EAA8ClG,EAA9CkG,OAAQC,EAAsCnG,EAAtCmG,OAAQC,EAA8BpG,EAA9BoG,OAAQC,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,aCUCS,MAZf,WAEI,OADoB/B,qBAAWC,GAAzB+B,UAGEjG,EAAAC,EAAAC,cAAA,OAAKE,GAAG,WAAR,cAKD,uBCQI8F,MAjBf,WACI,OACIlG,EAAAC,EAAAC,cAAA,OAAKE,GAAG,eACJJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,KAAGI,KAAMlB,EAAQkC,OAAO,SAAS6E,IAAI,uBACjCnG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAU/F,UAAU,sCAAsCoD,MAAO,CAAE4C,OAAQ,OAAQC,MAAO,YAGlGtG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,KAAGI,KAAMnB,GACLa,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAQ/F,UAAU,sCAAsCoD,MAAO,CAAE4C,OAAQ,OAAQC,MAAO,qBCA7FC,MAXf,WACI,OACIvG,EAAAC,EAAAC,cAAA,UAAQE,GAAG,UACPJ,EAAAC,EAAAC,cAAA,YACC,IAAIsG,MAAOC,cAFhB,SAEkCxH,EAC9Be,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2BAAkBF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,oCAAoCgB,OAAO,SAAS6E,IAAI,uBAAhE,sBCJxBxE,EAAQC,EAAQ,IAUP,SAASC,EAATpC,GAA8B,IAAViH,EAAUjH,EAAViH,OAAUhG,EACXC,mBAAS,IADEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClCuB,EADkCrB,EAAA,GACzBsB,EADyBtB,EAAA,GAAA+F,EAERhG,mBAASzB,GAFD0H,EAAA/F,OAAAC,EAAA,EAAAD,CAAA8F,EAAA,GAElCE,EAFkCD,EAAA,GAExBE,EAFwBF,EAAA,GAAAG,EAGMpG,mBAAS,IAHfqG,EAAAnG,OAAAC,EAAA,EAAAD,CAAAkG,EAAA,GAGlCE,EAHkCD,EAAA,GAGhBE,EAHgBF,EAAA,GAezC,OAVA7E,oBAAU,WACNR,EAAMS,IAAN,SAAA/C,OAAmBqH,EAAnB,iBACKrE,KAAK,SAACC,GACH,IAAM6E,EAAY7E,EAAIE,KAAKC,MAAM,MAAM,GAAGe,QAAQ,KAAK,IACjDjB,EAhBtB,SAAoBN,EAAQyE,GAIxB,OADAzE,EAAUA,EAAQuB,QAAQ,iBAAhB,OAAAnE,OAAwCC,EAAxC,KAAAD,OAA2DqH,EAA3D,MAasBU,CAAW9E,EAAIE,KAAKkE,GACxCxE,EAAWK,GACXuE,EAAY,GAAAzH,OAAI8H,EAAJ,OAAA9H,OAAmBH,IAC/BgI,EAAmB3E,EAAY8E,WAAW,IAAI,KAAK3E,MAAM,EAAE,SAEpE,IAEC1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqH,SAAA,KACItH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACIvH,EAAAC,EAAAC,cAAA,QAAMsH,QAAQ,UACdxH,EAAAC,EAAAC,cAAA,aAAQ2G,GACR7G,EAAAC,EAAAC,cAAA,QAAMuH,KAAK,cAAcxF,QAASgF,KAEtCjH,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACIhD,SAAUsC,EACVW,WAAY,CACRC,KADQ,SAAAC,GAC8CA,EAA/CC,KAA+C,IAAzCC,EAAyCF,EAAzCE,OAAQ3C,EAAiCyC,EAAjCzC,UAAWV,EAAsBmD,EAAtBnD,SAAasD,EAASpC,OAAAqC,EAAA,EAAArC,CAAAiC,EAAA,0CAC5CK,EAAQ,iBAAiBC,KAAK/C,GAAa,IACjD,OAAQ2C,GAAUG,EACdnD,EAAAC,EAAAC,cAACmD,EAAA,EAADxC,OAAAyC,OAAA,CACI3D,SAAU4D,OAAO5D,GAAU6D,QAAQ,MAAO,IAC1CC,MAAOC,IACPC,SAAUR,EAAM,GAChBS,OAAO,OACHX,IAGRjD,EAAAC,EAAAC,cAAA,OAAAW,OAAAyC,OAAA,CAAMjD,UAAWA,GAAe4C,GAC3BtD,kDC1C1B,IAAMuE,EAAcwD,IAAMC,cAAc,IAEzCC,EAAkB,IAAIC,gBAAgBpG,OAAOqG,SAASC,QACtD3D,EAASvD,OAAOmH,YAAYJ,EAAgBK,aACvB7D,EAArB8D,uBAAOC,IAEb,SAASC,IAAQ,IAAA1H,EACeC,oBAAS,GADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACVuF,EADUrF,EAAA,GACCuD,EADDvD,EAAA,GAGf,OACEZ,EAAAC,EAAAC,cAACgE,EAAYmE,SAAb,CAAsBlH,MAAO,CAAE8E,YAAW9B,aAAYC,WACpDpE,EAAAC,EAAAC,cAACoI,EAAD,MACAtI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBACH8H,IAATD,EACClI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACEvH,EAAAC,EAAAC,cAAA,QAAMsH,QAAQ,UACdxH,EAAAC,EAAAC,cAAA,aAAQhB,GACRc,EAAAC,EAAAC,cAAA,QAAMuH,KAAK,cAAcxF,QAAQ,4DAEnCjC,EAAAC,EAAAC,cAACqI,EAAD,MACAvI,EAAAC,EAAAC,cAACsI,EAAD,MACAxI,EAAAC,EAAAC,cAACuI,EAAD,OAGFzI,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACbL,EAAAC,EAAAC,cAACwI,EAAD,CAAUhC,OAAQwB,IAClBlI,EAAAC,EAAAC,cAACsI,EAAD,MACAxI,EAAAC,EAAAC,cAACuI,EAAD,SASZ,IAAME,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO/I,EAAAC,EAAAC,cAACkI,EAAD,MAAWO,GAK3BrD","file":"static/js/main.f88bbc1f.chunk.js","sourcesContent":["export const GITHUB_USER = 'p208p2002'\nexport const OWNER = 'Philip Huang'\nexport const BLOG_NAME = 'Philip\\'s blog'\nexport const HOME_PAGE = '/'\nexport const GITHUB = `https://github.com/${GITHUB_USER}`\nexport const IMG_FILE_PREFIX = `https://media.githubusercontent.com/media/${GITHUB_USER}/blog/main/public/docs`\nexport const POST_PRE_PAGE = 5","import React from 'react'\nimport './index.css'\n\nfunction PostBlock({doc,children}) {\n   \n    let title = doc.title\n    let created_at = doc.date\n    let tags = doc.tags\n\n    // let isIpynb = title.match(/.*\\.ipynb/) === null ? false : true\n    // let ownerName = post.owner.login\n    return (\n        <div key={title} id=\"Post-Block\">\n            \n            <div className=\"text-center\">\n                <div>\n                <a className='post-title' href={doc.page_link}>{title}</a>\n\n                    {/* {isIpynb ? <a className='post-title' href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a> : <a className='post-title' href={`/?render=${gistId}`}>{title}</a>} */}\n\n                    {/* {isIpynb ?\n                        <a\n                            className='post-title'\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href={`http://colab.research.google.com/gist/${ownerName}/` + html_url.replace(\"https://gist.github.com/\", \"\")}>\n                            <img className=\"title-badge\" src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"open in colab\" srcSet=\"\" />\n                        </a>\n                        :\n                        null\n                    } */}\n                </div>\n\n                <div>\n                    <small>\n                        {tags.join(\"#\")}\n                        <br />\n                        <span>{created_at}</span>\n                        <br />\n                    </small>\n                </div>\n            </div>\n\n            <hr />\n            {children}\n        </div>\n    )\n}\n\nexport default PostBlock","import React from 'react'\nimport './index.css'\nimport { useState } from 'react'\n\nfunction Search() {\n    let [keyword, setKeyword] = useState('')\n    return (\n        <div id=\"Search-Bar\">\n            <form id=\"Searrch-Form\">\n                <input\n                    placeholder=\"Seacrh Post\"\n                    type=\"text\"\n                    value={keyword}\n                    onChange={(e) => {\n                        setKeyword(e.target.value)\n                    }}\n                />\n                <button\n                    type=\"submit\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        window.open(\"/index.json\");\n                        setKeyword('')\n                    }}\n                >\n                    <i className=\"fa fa-search\"></i>\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default Search","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { tomorrow as codeSyntaxStyle } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport './preview.css'\nconst axios = require('axios');\n\nexport default function MdRender({ file_link, maxLine=20 }) {\n    const [content, setContent] = useState(\"\")\n    useEffect(() => {\n        axios.get(file_link)\n            .then((res) => {\n                const gistContent = res.data.split(\"\\n\").slice(2,maxLine).join(\"\\n\")\n\n                setContent(gistContent)\n            })\n    }, [])\n    return (\n        <div className=\"md-preview\">\n            <ReactMarkdown\n            children={content}\n            components={{\n                code({ node, inline, className, children, ...props }) {\n                    const match = /language-(\\w+)/.exec(className || '')\n                    return !inline && match ? (\n                        <SyntaxHighlighter\n                            children={String(children).replace(/\\n$/, '')}\n                            style={codeSyntaxStyle}\n                            language={match[1]}\n                            PreTag=\"div\"\n                            {...props}\n                        />\n                    ) : (\n                        <code className={className} {...props}>\n                            {children}\n                        </code>\n                    )\n                }\n            }}\n        />\n        </div>\n    )\n}","import React from 'react'\nimport { useState, useEffect, useContext } from 'react'\nimport './App.css';\nimport { BLOG_NAME,POST_PRE_PAGE } from './configs/general'\nimport PostBlock from './modules/PostBlock'\nimport Search from './modules/Search'\nimport { RootContext } from './index'\nimport MDPreviewer from './modules/MdRender/preview'\n\n\nconst axios = require('axios');\n\nfunction App() {\n\n  let [posts, setPosts] = useState([])\n  let { setLoading,params } = useContext(RootContext)\n  let { offset = 0 ,limit = POST_PRE_PAGE} = params\n\n  offset = parseInt(offset)\n  limit = parseInt(limit)\n\n  let fetchPost = () => {\n    setLoading(true)\n    axios.get(\"/index.json\")\n      .then((res) => {\n        posts = res.data\n        posts = posts.slice(offset,limit)\n        setPosts(posts)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n      .then(() => {\n        setLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    fetchPost()\n  }, [])\n\n  return (\n    <div id=\"App\">\n      <div className=\"text-center\">\n        <h1>{BLOG_NAME}</h1>\n        <Search />\n      </div>\n      \n      <div className=\"context\">\n        {posts.map((post, i) => (\n          <PostBlock key={i} doc={post} >\n            <MDPreviewer file_link={post.file_link}  maxLine={15}/>\n          </PostBlock>\n        ))}\n      </div>\n      {/* pagination */}\n      <div style={{textAlign:'center'}}>\n      <a href=\"/\">{`<<Fisrt Page`}</a>\n      <span style={{marginLeft:5,marginRight:5}}> - </span>\n      <a href={`/?offset=${offset+POST_PRE_PAGE}&limit=${offset+POST_PRE_PAGE*2}`}>{'Older Post >>'}</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport { useContext } from 'react'\nimport { RootContext } from '../../index'\nimport './index.css'\n\nfunction Loading(){\n    let { isLoading } = useContext(RootContext)\n    if(isLoading){\n        return(\n            <div id=\"Loading\">\n                Loading...\n            </div>\n        )\n    }\n    return null\n}\n\nexport default Loading","import React from 'react'\nimport './index.css'\nimport { FaGithub,FaHome } from \"react-icons/fa\";\nimport { HOME_PAGE,GITHUB } from '../../configs/general'\n\nfunction index() {\n    return (\n        <div id=\"Corner-Menu\">\n            <div className=\"link\">\n                <a href={GITHUB} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <FaGithub className=\"animate__animated animate__backInUp\" style={{ height: '100%', width: '100%' }} />\n                </a>\n            </div>\n            <div className=\"link\">\n                <a href={HOME_PAGE}>\n                    <FaHome className=\"animate__animated animate__backInUp\" style={{ height: '100%', width: '100%' }} />\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default index","import React from 'react'\nimport { OWNER } from '../../configs/general'\nimport './index.css'\n\nfunction Footer() {\n    return (\n        <footer id=\"Footer\">\n            <br/>\n            {new Date().getFullYear()} © {OWNER}\n            <br/>\n            <small>Powered by <a href=\"https://github.com/p208p2002/blog\" target=\"_blank\" rel=\"noopener noreferrer\">Trailer</a></small>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useEffect, useState } from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { tomorrow as codeSyntaxStyle } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { BLOG_NAME,IMG_FILE_PREFIX } from '../../configs/general'\nimport { Helmet } from 'react-helmet'\nconst axios = require('axios');\n\n\nfunction fixImgLink(content,doc_id){\n    // replace local path written on MD to url (on the media.githubusercontent.com)\n    // ![](./ -> ![](https://media.githubusercontent.com/...\n    content = content.replace(/!\\[.*\\]\\(\\.\\//g,`![](${IMG_FILE_PREFIX}/${doc_id}/`)\n    return content\n}\n\nexport default function MdRender({ doc_id }) {\n    const [content, setContent] = useState(\"\")\n    const [pageTitle,setPageTitle] = useState(BLOG_NAME)\n    const [pageDescription , setPageDescription] = useState(\"\")\n\n    useEffect(() => {\n        axios.get(`/docs/${doc_id}/document.md`)\n            .then((res) => {\n                const gistTitle = res.data.split(\"\\n\")[2].replace(\"# \",\"\")\n                const gistContent = fixImgLink(res.data,doc_id)\n                setContent(gistContent)\n                setPageTitle(`${gistTitle} - ${BLOG_NAME}`)\n                setPageDescription(gistContent.replaceAll(\"#\",\" \").slice(0,500))\n            })\n    }, [])\n    return (\n        <>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{pageTitle}</title>\n                <meta name=\"description\" content={pageDescription}/>\n            </Helmet>\n            <ReactMarkdown\n                children={content}\n                components={{\n                    code({ node, inline, className, children, ...props }) {\n                        const match = /language-(\\w+)/.exec(className || '')\n                        return !inline && match ? (\n                            <SyntaxHighlighter\n                                children={String(children).replace(/\\n$/, '')}\n                                style={codeSyntaxStyle}\n                                language={match[1]}\n                                PreTag=\"div\"\n                                {...props}\n                            />\n                        ) : (\n                            <code className={className} {...props}>\n                                {children}\n                            </code>\n                        )\n                    }\n                }}\n            />\n        </>\n    )\n}","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport LoadingView from './modules/Loading'\nimport CornerMenu from './modules/CornerMenu'\nimport Footer from './modules/Footer'\nimport { BLOG_NAME } from './configs/general'\nimport MdRender from './modules/MdRender';\nimport {Helmet} from 'react-helmet'\nexport const RootContext = React.createContext({});\n\nconst urlSearchParams = new URLSearchParams(window.location.search);\nconst params = Object.fromEntries(urlSearchParams.entries());\nlet { page = undefined } = params\n\nfunction Index() {\n  let [isLoading, setLoading] = useState(false)\n\n  return (\n    <RootContext.Provider value={{ isLoading, setLoading, params }}>\n      <LoadingView />\n      <div className=\"container\">\n        {page === undefined ? (\n          <div className=\"app-container\">\n            <Helmet>\n              <meta charSet=\"utf-8\" />\n              <title>{BLOG_NAME}</title>\n              <meta name=\"description\" content=\"程式筆記與心得分享\" />\n            </Helmet>\n            <App />\n            <CornerMenu />\n            <Footer />\n          </div>\n        ) : (\n          <div className=\"render-container\">\n            <MdRender doc_id={page} />\n            <CornerMenu />\n            <Footer />\n          </div>\n        )}\n\n      </div>\n    </RootContext.Provider >\n  )\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Index />, rootElement);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}