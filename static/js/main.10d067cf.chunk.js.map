{"version":3,"sources":["configs/general.js","modules/PostBlock/index.jsx","modules/Search/index.jsx","App.js","reportWebVitals.js","modules/Loading/index.jsx","modules/CornerMenu/index.jsx","modules/Footer/index.jsx","index.js"],"names":["TITLE_FILTER_RULE","DESC_FILTER_RULE","HOME_PAGE","PostBlock","props","post","title","Object","keys","files","created_at","updated_at","html_url","description","id","href","target","rel","replace","moment","format","Search","useState","keyword","setKeyword","placeholder","type","value","onChange","e","onClick","preventDefault","window","open","encodeURI","className","axios","require","App","posts","setPosts","setLoading","useContext","RootContext","useEffect","titleRule","descRule","get","then","res","console","log","data","filter","match","catch","err","map","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","isLoading","index","style","height","width","Footer","Date","getFullYear","React","createContext","Index","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10d067cf.chunk.js","sourcesContent":["export const GITHUB_USER = 'p208p2002'\nexport const OWNER = 'Philip Huang'\nexport const GIST_API_URL = 'https://api.github.com/users/p208p2002/gists'\n\nexport const TITLE_FILTER_RULE = /md$|ipynb$/; \nexport const DESC_FILTER_RULE = /#blog/;\n\nexport const HOME_PAGE = 'https://p208p2002.github.io/'\nexport const GITHUB = 'https://github.com/p208p2002'","import './index.css'\nimport { DESC_FILTER_RULE } from '../../configs/general'\nimport moment from 'moment'\n\nfunction PostBlock(props) {\n    let { post } = props\n    let title = Object.keys(post.files)[0] // only use first file\n    let { created_at, updated_at, html_url, description } = post\n    return (\n        <div key={title} id=\"Post-Block\">\n            <div>\n                <a href={html_url} target=\"_blank\" rel=\"noreferrer\">{title}</a>\n            </div>\n            <div>\n                <small>\n                    {description.replace(DESC_FILTER_RULE,\"\")}\n                    <br/>\n                    <span><b>create at: </b>{moment(created_at).format(\"LLL\")}</span>\n                    <br/>\n                    <span><b>update at: </b>{moment(updated_at).format(\"LLL\")}</span>\n                </small>\n            </div>\n        </div>\n    )\n}\n\nexport default PostBlock","import './index.css'\nimport { GITHUB_USER } from '../../configs/general'\nimport { useState } from 'react'\n\nfunction Search() {\n    let [keyword, setKeyword] = useState('')\n    return (\n        <div id=\"Search-Bar\">\n            <form id=\"Searrch-Form\">\n                <input\n                    placeholder=\"Seacrh on Gist\"\n                    type=\"text\"\n                    value={keyword}\n                    onChange={(e) => {\n                        setKeyword(e.target.value)\n                    }}\n                />\n                <button\n                    type=\"submit\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        window.open(\"https://gist.github.com/search?q=\" + encodeURI(`user:${GITHUB_USER} ${keyword}`));\n                        setKeyword('')\n                    }}\n                >\n                    <i className=\"fa fa-search\"></i>\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default Search","import { useState, useEffect, useContext } from 'react'\nimport './App.css';\nimport { GIST_API_URL, TITLE_FILTER_RULE, DESC_FILTER_RULE } from './configs/general'\nimport PostBlock from './modules/PostBlock'\nimport Search from './modules/Search'\nimport { RootContext } from './index'\n\n\nconst axios = require('axios');\n\nfunction App() {\n\n  let [posts, setPosts] = useState([])\n  let { setLoading } = useContext(RootContext)\n\n  let fetchPost = (titleRule, descRule) => {\n    setLoading(true)\n    axios.get(GIST_API_URL)\n      .then((res) => {\n        console.log(res.data)\n        posts = res.data\n        posts = posts.filter((post) => {\n          let title = Object.keys(post.files)[0] // only use first file\n          let { description } = post\n          // console.log(description)\n          if (title.match(titleRule) && description.match(descRule)) {\n            return true\n          }\n          return false\n        })\n        setPosts(posts)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n      .then(() => {\n        setLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    fetchPost(TITLE_FILTER_RULE, DESC_FILTER_RULE)\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div id=\"App\">\n      <Search />\n      <div>\n        {posts.map((post, i) => <PostBlock key={i} post={post} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useContext } from 'react'\nimport { RootContext } from '../../index'\n\nfunction Loading(){\n    let { isLoading } = useContext(RootContext)\n    if(isLoading){\n        return(\n            <p>Loading...</p>\n        )\n    }\n    return null\n}\n\nexport default Loading","import './index.css'\nimport { FaGithub,FaHome } from \"react-icons/fa\";\nimport { HOME_PAGE,GITHUB } from '../../configs/general'\n\nfunction index() {\n    return (\n        <div id=\"Corner-Menu\">\n            <div className=\"link\">\n                <a href={GITHUB} target=\"_blank\" rel=\"noreferrer\">\n                    <FaGithub className=\"animate__animated animate__backInUp\" style={{ height: '100%', width: '100%' }} />\n                </a>\n            </div>\n            <div className=\"link\">\n                <a href={HOME_PAGE} target=\"_blank\" rel=\"noreferrer\">\n                    <FaHome className=\"animate__animated animate__backInUp\" style={{ height: '100%', width: '100%' }} />\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default index","import { OWNER,HOME_PAGE } from '../../configs/general'\nimport './index.css'\n\nfunction Footer() {\n    return (\n        <footer id=\"Footer\">\n            <br/>\n            {new Date().getFullYear()} Â© {OWNER}\n            <br/>\n            <small>Website design and develop by <b><a href={HOME_PAGE} target=\"_blank\" rel=\"noreferrer\">Philip Huang</a></b></small>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport LoadingView from './modules/Loading'\nimport CornerMenu from './modules/CornerMenu'\nimport Footer from './modules/Footer'\nexport const RootContext = React.createContext({});\n\nfunction Index() {\n  let [isLoading, setLoading] = useState(false)\n  return (\n    <RootContext.Provider value={{ isLoading, setLoading }}>\n      <div className=\"container\">\n        <div className=\"inner-container\">\n          <App />\n          <LoadingView />\n          <CornerMenu/>\n          <Footer />\n        </div>\n      </div>\n    </RootContext.Provider >\n  )\n}\n\nReactDOM.render(\n  <>\n    <Index />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}